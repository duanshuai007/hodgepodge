!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADC_END_ADDR	adc/adc_device.c	19;"	d	file:
ADC_START_ADDR	adc/adc_device.c	18;"	d	file:
BUFFER_SIZE	socket/socket_client.c	13;"	d	file:
BUFFER_SIZE	socket/socket_tcp_client.c	13;"	d	file:
BUFFER_SIZE	socket/socket_test.c	14;"	d	file:
CLEAR_CON_BIT	led/led_driver.c	31;"	d	file:
DEBUG	adc/adc_driver_sync.c	28;"	d	file:
DEVICE_NAME	led/led.c	10;"	d	file:
DEVICE_NAME	led/test.c	11;"	d	file:
FALSE	socket/socket_test.c	16;"	d	file:
FALSE	uart/uart_test.c	10;"	d	file:
GLOBALMEM_MAJOR	io/io.c	16;"	d	file:
GLOBALMEM_SIZE	io/io.c	13;"	d	file:
KDIR	adc/Makefile	/^KDIR:=\/home\/duan\/work\/kernel\/linux-3.6.6$/;"	m
KDIR	hello_d/Makefile	/^KDIR:=\/home\/duan\/work\/kernel\/linux-3.6.6$/;"	m
KDIR	key/Makefile	/^KDIR:=\/home\/duan\/work\/kernel\/linux-3.6.6$/;"	m
KDIR	led/Makefile	/^KDIR:=\/home\/duan\/work\/kernel\/linux-3.6.6$/;"	m
KDIR	uart/Makefile	/^KDIR:=\/home\/duan\/work\/linux-2.6.32.2$/;"	m
LED_FREQ	led/led_driver.c	27;"	d	file:
LED_IN_FREQ	led/led_driver.c	222;"	d	file:
LED_MAJOR	led/led.c	11;"	d	file:
LED_MAJOR	led/test.c	12;"	d	file:
LED_OFF	led/led.c	13;"	d	file:
LED_OFF	led/led_driver.c	26;"	d	file:
LED_OFF	led/test.c	14;"	d	file:
LED_ON	led/led.c	12;"	d	file:
LED_ON	led/led_driver.c	25;"	d	file:
LED_ON	led/test.c	13;"	d	file:
MEM_CLEAR	io/io.c	14;"	d	file:
MYPORT	socket/socket_client.c	12;"	d	file:
MYPORT	socket/socket_test.c	12;"	d	file:
NUM_RESOURCE	key/key_driver.c	19;"	d	file:
NUM_RESOURCE	led/led_driver.c	29;"	d	file:
PORT	socket/socket_tcp_client.c	12;"	d	file:
PRINTK	adc/adc_driver_sync.c	31;"	d	file:
PRINTK	adc/adc_driver_sync.c	33;"	d	file:
PWD	adc/Makefile	/^PWD:=$(shell pwd)$/;"	m
PWD	hello_d/Makefile	/^PWD:=$(shell pwd)$/;"	m
PWD	key/Makefile	/^PWD:=$(shell pwd)$/;"	m
PWD	led/Makefile	/^PWD:=$(shell pwd)$/;"	m
PWD	uart/Makefile	/^PWD:=$(shell pwd)$/;"	m
QUEUE	socket/socket_test.c	13;"	d	file:
RTC_ADDR_END	kerneltimer/kt_device.c	12;"	d	file:
RTC_BASE_ADDR	kerneltimer/kt_device.c	11;"	d	file:
S3C2440_ADCCON_ADDR	adc/adc_device.c	11;"	d	file:
S3C2440_ADCDAT0_ADDR	adc/adc_device.c	14;"	d	file:
S3C2440_ADCDAT1_ADDR	adc/adc_device.c	15;"	d	file:
S3C2440_ADCDLY_ADDR	adc/adc_device.c	13;"	d	file:
S3C2440_ADCTSC_ADDR	adc/adc_device.c	12;"	d	file:
S3C2440_ADCUPDN_ADDR	adc/adc_device.c	16;"	d	file:
S3C2440_GPB_BASEADDR	led/led_driver.c	35;"	d	file:
S3C2440_TCFG0_ADDR	led/led_driver.c	37;"	d	file:
S3C2440_TCFG1_ADDR	led/led_driver.c	38;"	d	file:
S3C2440_TCMPB0_ADDR	led/led_driver.c	41;"	d	file:
S3C2440_TCMPB1_ADDR	led/led_driver.c	44;"	d	file:
S3C2440_TCMPB2_ADDR	led/led_driver.c	47;"	d	file:
S3C2440_TCMPB3_ADDR	led/led_driver.c	50;"	d	file:
S3C2440_TCNTB0_ADDR	led/led_driver.c	40;"	d	file:
S3C2440_TCNTB1_ADDR	led/led_driver.c	43;"	d	file:
S3C2440_TCNTB2_ADDR	led/led_driver.c	46;"	d	file:
S3C2440_TCNTB3_ADDR	led/led_driver.c	49;"	d	file:
S3C2440_TCNTB3_ADDR	led/led_driver.c	51;"	d	file:
S3C2440_TCNTO0_ADDR	led/led_driver.c	42;"	d	file:
S3C2440_TCNTO1_ADDR	led/led_driver.c	45;"	d	file:
S3C2440_TCNTO2_ADDR	led/led_driver.c	48;"	d	file:
S3C2440_TCON_ADDR	led/led_driver.c	39;"	d	file:
SET_CON_BIT	led/led_driver.c	32;"	d	file:
SET_UP_BIT	led/led_driver.c	33;"	d	file:
TRUE	socket/socket_test.c	17;"	d	file:
TRUE	uart/uart_test.c	11;"	d	file:
TYPE	led/led_test.c	8;"	d	file:
TYPE	led/led_test_module.c	8;"	d	file:
UART_Init	uart/uart_test.c	/^int UART_Init(int fd, int speed, int flow_ctrl, int databits, int stopbits, char parity)$/;"	f	signature:(int fd, int speed, int flow_ctrl, int databits, int stopbits, char parity)
UART_Recv	uart/uart_test.c	/^int UART_Recv(int fd, char * rcv_buf, int datalen)$/;"	f	signature:(int fd, char * rcv_buf, int datalen)
UART_Send	uart/uart_test.c	/^int UART_Send(int fd, char * send_buf, int len)$/;"	f	signature:(int fd, char * send_buf, int len)
UART_Set	uart/uart_test.c	/^int UART_Set(int fd, int speed,int flow_ctrl, int databits, int stopbits, char parity)$/;"	f	signature:(int fd, int speed,int flow_ctrl, int databits, int stopbits, char parity)
W_DAT_BIT	led/led_driver.c	60;"	d	file:
__this_module	adc/adc_device.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	adc/adc_driver_sync.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	hello_d/hello.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	key/key_device.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	key/key_driver.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	led/led_device.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	led/led_driver.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	uart/s3c2440.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	adc/adc_device.mod.c	/^__used$/;"	v	file:
__used	adc/adc_driver_sync.mod.c	/^__used$/;"	v	file:
__used	hello_d/hello.mod.c	/^__used$/;"	v	file:
__used	key/key_device.mod.c	/^__used$/;"	v	file:
__used	key/key_driver.mod.c	/^__used$/;"	v	file:
__used	led/led_device.mod.c	/^__used$/;"	v	file:
__used	led/led_driver.mod.c	/^__used$/;"	v	file:
__used	uart/s3c2440.mod.c	/^__used$/;"	v	file:
adc_clk	adc/adc_driver.c	/^static struct clk * adc_clk;$/;"	v	typeref:struct:clk	file:
adc_clk	adc/adc_driver_sync.c	/^static struct clk * adc_clk;$/;"	v	typeref:struct:clk	file:
adc_irqs	adc/adc_driver.c	/^    int adc_irqs;$/;"	m	struct:adcs	file:	access:public
adc_irqs	adc/adc_driver_sync.c	/^    int adc_irqs;$/;"	m	struct:adcs	file:	access:public
adc_lock	adc/adc_driver_sync.c	/^    struct semaphore adc_lock; \/\/设备打开锁，用于只打开一个设备$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::semaphore	file:	access:public
adcs	adc/adc_driver.c	/^struct adcs{$/;"	s	file:
adcs	adc/adc_driver.c	/^}adcs;$/;"	v	typeref:struct:adcs
adcs	adc/adc_driver_sync.c	/^struct adcs{$/;"	s	file:
adcs	adc/adc_driver_sync.c	/^}adcs;$/;"	v	typeref:struct:adcs
adcs::adc_irqs	adc/adc_driver.c	/^    int adc_irqs;$/;"	m	struct:adcs	file:	access:public
adcs::adc_irqs	adc/adc_driver_sync.c	/^    int adc_irqs;$/;"	m	struct:adcs	file:	access:public
adcs::irq_names	adc/adc_driver.c	/^    char * irq_names;$/;"	m	struct:adcs	file:	access:public
adcs::irq_names	adc/adc_driver_sync.c	/^    char * irq_names;$/;"	m	struct:adcs	file:	access:public
adcs::names	adc/adc_driver.c	/^    char * names;$/;"	m	struct:adcs	file:	access:public
adcs::names	adc/adc_driver_sync.c	/^    char * names;$/;"	m	struct:adcs	file:	access:public
adcs::padcs	adc/adc_driver.c	/^    int padcs;$/;"	m	struct:adcs	file:	access:public
adcs::padcs	adc/adc_driver_sync.c	/^    int padcs;$/;"	m	struct:adcs	file:	access:public
adcs::size	adc/adc_driver.c	/^    int size;$/;"	m	struct:adcs	file:	access:public
adcs::size	adc/adc_driver_sync.c	/^    int size;$/;"	m	struct:adcs	file:	access:public
baudclk	uart/samsung.h	/^	struct clk			*baudclk;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::clk	access:public
baudclk_rate	uart/samsung.h	/^	unsigned long			baudclk_rate;$/;"	m	struct:s3c24xx_uart_port	access:public
bepressed	key/key_driver.c	/^    int bepressed;$/;"	m	struct:s3c2440_button	file:	access:public
button_device	key/key_device.c	/^static struct platform_device button_device = {$/;"	v	typeref:struct:platform_device	file:
button_resource	key/key_device.c	/^static struct resource button_resource[] =$/;"	v	typeref:struct:resource	file:
cdev	io/io.c	/^    struct cdev * cdev;$/;"	m	struct:globalmem_dev	typeref:struct:globalmem_dev::cdev	file:	access:public
cdev	key/key_driver.c	/^    struct cdev * cdev;$/;"	m	struct:s3c2440_button	typeref:struct:s3c2440_button::cdev	file:	access:public
class	io/io.c	/^    struct class * class;$/;"	m	struct:globalmem_dev	typeref:struct:globalmem_dev::class	file:	access:public
clk	uart/samsung.h	/^	struct clk			*clk;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::clk	access:public
clksrc	uart/samsung.h	/^	struct s3c24xx_uart_clksrc	*clksrc;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::s3c24xx_uart_clksrc	access:public
dbg	uart/samsung.h	/^static void dbg(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
dbg	uart/samsung.h	114;"	d
dev_major	adc/adc_driver.c	/^int dev_major = -1;$/;"	v
dev_major	adc/adc_driver_sync.c	/^int dev_major = -1;$/;"	v
dev_major	kerneltimer/kt_driver.c	/^int dev_major = -1;$/;"	v
dev_major	key/key_driver.c	/^int dev_major = -1;$/;"	v
dev_major	led/led_driver.c	/^int dev_major = -1;$/;"	v
devp	io/io.c	/^struct globalmem_dev * devp;$/;"	v	typeref:struct:globalmem_dev
fifosize	uart/samsung.h	/^	unsigned int		fifosize;$/;"	m	struct:s3c24xx_uart_info	access:public
file_ops	io/io.c	/^static struct file_operations file_ops = {$/;"	v	typeref:struct:file_operations	file:
freq_transition	uart/samsung.h	/^	struct notifier_block		freq_transition;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::notifier_block	access:public
get_clksrc	uart/samsung.h	/^	int (*get_clksrc)(struct uart_port *, struct s3c24xx_uart_clksrc *clk);$/;"	m	struct:s3c24xx_uart_info	access:public
globalmem_dev	io/io.c	/^struct globalmem_dev{$/;"	s	file:
globalmem_dev::cdev	io/io.c	/^    struct cdev * cdev;$/;"	m	struct:globalmem_dev	typeref:struct:globalmem_dev::cdev	file:	access:public
globalmem_dev::class	io/io.c	/^    struct class * class;$/;"	m	struct:globalmem_dev	typeref:struct:globalmem_dev::class	file:	access:public
globalmem_dev::mem	io/io.c	/^    unsigned char mem[GLOBALMEM_SIZE];$/;"	m	struct:globalmem_dev	file:	access:public
globalmem_exit	io/io.c	/^module_exit(globalmem_exit);$/;"	v
globalmem_exit	io/io.c	/^static void globalmem_exit(void)$/;"	f	file:	signature:(void)
globalmem_ioctl	io/io.c	/^static int globalmem_ioctl($/;"	f	file:	signature:( struct inode * inodep, struct file * filp, unsigned int cmd, unsigned long arg )
globalmem_llseek	io/io.c	/^static loff_t globalmem_llseek($/;"	f	file:	signature:( struct file * filp, loff_t offset, int orig )
globalmem_major	io/io.c	/^static globalmem_major = GLOBALMEM_MAJOR;$/;"	v	file:
globalmem_open	io/io.c	/^static int globalmem_open(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
globalmem_probe	io/io.c	/^module_init(globalmem_probe);$/;"	v
globalmem_probe	io/io.c	/^static int globalmem_probe(void)$/;"	f	file:	signature:(void)
globalmem_read	io/io.c	/^static unsigned long globalmem_read($/;"	f	file:	signature:( struct file * filp, char __user * buffer, size_t count, loff_t * pos )
globalmem_release	io/io.c	/^static int globalmem_release(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
globalmem_write	io/io.c	/^static unsigned long globalmem_write($/;"	f	file:	signature:( struct file * filp, const char __user * buffer, size_t count, loff_t * pos )
has_divslot	uart/samsung.h	/^	unsigned int		has_divslot:1;$/;"	m	struct:s3c24xx_uart_info	access:public
hello_exit	hello_d/hello.c	/^module_exit(hello_exit);$/;"	v
hello_exit	hello_d/hello.c	/^static void __exit hello_exit(void)$/;"	f	file:	signature:(void)
hello_init	hello_d/hello.c	/^module_init(hello_init);$/;"	v
hello_init	hello_d/hello.c	/^static int __init hello_init(void)$/;"	f	file:	signature:(void)
info	uart/samsung.h	/^	struct s3c24xx_uart_info	*info;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::s3c24xx_uart_info	access:public
interrupt_flag	led/led_driver.c	/^    int interrupt_flag;$/;"	m	struct:s3c2440_led	file:	access:public
irq_name	kerneltimer/kt_driver.c	/^    char * irq_name;$/;"	m	struct:rtc	file:	access:public
irq_names	adc/adc_driver.c	/^    char * irq_names;$/;"	m	struct:adcs	file:	access:public
irq_names	adc/adc_driver_sync.c	/^    char * irq_names;$/;"	m	struct:adcs	file:	access:public
irqs	key/key_driver.c	/^struct irqs{$/;"	s	file:
irqs	key/key_driver.c	/^}irqs;$/;"	v	typeref:struct:irqs
irqs::names	key/key_driver.c	/^    char * names[NUM_RESOURCE];$/;"	m	struct:irqs	file:	access:public
irqs::pirqs	key/key_driver.c	/^    int pirqs[NUM_RESOURCE];$/;"	m	struct:irqs	file:	access:public
key_values	key/key_driver.c	/^    int key_values;$/;"	m	struct:s3c2440_button	file:	access:public
led_cfg_table	led/led.c	/^static unsigned int led_cfg_table[] =$/;"	v	file:
led_cfg_table	led/test.c	/^static unsigned int led_cfg_table[] =$/;"	v	file:
led_exit	led/led.c	/^module_exit(led_exit);$/;"	v
led_exit	led/led.c	/^static void __exit led_exit(void)$/;"	f	file:	signature:(void)
led_exit	led/test.c	/^module_exit(led_exit);$/;"	v
led_exit	led/test.c	/^static void __exit led_exit(void)$/;"	f	file:	signature:(void)
led_init	led/led.c	/^module_init(led_init);$/;"	v
led_init	led/led.c	/^static int __init led_init(void)$/;"	f	file:	signature:(void)
led_init	led/test.c	/^module_init(led_init);$/;"	v
led_init	led/test.c	/^static int  __init led_init(void)$/;"	f	file:	signature:(void)
led_open	led/test.c	/^static int led_open(struct inode * inode, struct file * file)$/;"	f	file:	signature:(struct inode * inode, struct file * file)
led_ops	led/test.c	/^static struct file_operations led_ops = {$/;"	v	typeref:struct:file_operations	file:
led_release	led/test.c	/^static int led_release(struct inode * inode, struct file * file)$/;"	f	file:	signature:(struct inode * inode, struct file * file)
led_table	led/led.c	/^static unsigned long led_table[] =$/;"	v	file:
led_table	led/test.c	/^static unsigned long led_table[] =$/;"	v	file:
led_unlocked_ioctl	led/test.c	/^static long led_unlocked_ioctl($/;"	f	file:	signature:( struct file * file, unsigned int io_cmd, unsigned long arg )
leds	led/led_driver.c	/^struct leds$/;"	s	file:
leds	led/led_driver.c	/^}leds;$/;"	v	typeref:struct:leds
leds::names	led/led_driver.c	/^    char * names[NUM_RESOURCE];$/;"	m	struct:leds	file:	access:public
leds::pleds	led/led_driver.c	/^    int pleds[NUM_RESOURCE];$/;"	m	struct:leds	file:	access:public
leds::timer	led/led_driver.c	/^    int timer;$/;"	m	struct:leds	file:	access:public
leds::timer_name	led/led_driver.c	/^    char * timer_name;$/;"	m	struct:leds	file:	access:public
leds_fops	led/led.c	/^static struct file_operations leds_fops =$/;"	v	typeref:struct:file_operations	file:
leds_ioctl	led/led.c	/^static int leds_ioctl($/;"	f	file:	signature:( struct inode * inode, struct file * file, unsigned int cmd, unsigned long arg )
leds_open	led/led.c	/^static int leds_open(struct inode *inode, struct file * file)$/;"	f	file:	signature:(struct inode *inode, struct file * file)
lock	adc/adc_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_adc	file:	access:public
lock	adc/adc_driver_sync.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_adc	file:	access:public
lock	kerneltimer/kt_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_rtc	file:	access:public
lock	key/key_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_button	file:	access:public
lock	led/led_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_led	file:	access:public
mADCCON	adc/adc_driver.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCCON	adc/adc_driver_sync.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCDAT0	adc/adc_driver.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mADCDAT0	adc/adc_driver_sync.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mADCDAT1	adc/adc_driver.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mADCDAT1	adc/adc_driver_sync.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mADCDLY	adc/adc_driver.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCDLY	adc/adc_driver_sync.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCTSC	adc/adc_driver.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCTSC	adc/adc_driver_sync.c	/^volatile unsigned long *mADCCON, *mADCTSC, *mADCDLY;$/;"	v
mADCUPDN	adc/adc_driver.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mADCUPDN	adc/adc_driver_sync.c	/^volatile unsigned long *mADCDAT0, *mADCDAT1, *mADCUPDN;$/;"	v
mALMDATE	kerneltimer/kt_driver.c	/^volatile unsigned long *mALMHOUR, *mALMDATE, *mALMMON, *mALMYEAR;$/;"	v
mALMHOUR	kerneltimer/kt_driver.c	/^volatile unsigned long *mALMHOUR, *mALMDATE, *mALMMON, *mALMYEAR;$/;"	v
mALMMIN	kerneltimer/kt_driver.c	/^volatile unsigned long *mRTCCON, *mTICNT, *mRTCALM, *mALMSEC, *mALMMIN;$/;"	v
mALMMON	kerneltimer/kt_driver.c	/^volatile unsigned long *mALMHOUR, *mALMDATE, *mALMMON, *mALMYEAR;$/;"	v
mALMSEC	kerneltimer/kt_driver.c	/^volatile unsigned long *mRTCCON, *mTICNT, *mRTCALM, *mALMSEC, *mALMMIN;$/;"	v
mALMYEAR	kerneltimer/kt_driver.c	/^volatile unsigned long *mALMHOUR, *mALMDATE, *mALMMON, *mALMYEAR;$/;"	v
mBCDDATE	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDDATE, *mBCDDAY, *mBCDMON, *mBCDYEAR;$/;"	v
mBCDDAY	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDDATE, *mBCDDAY, *mBCDMON, *mBCDYEAR;$/;"	v
mBCDHOUR	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDSEC, *mBCDMIN, *mBCDHOUR;$/;"	v
mBCDMIN	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDSEC, *mBCDMIN, *mBCDHOUR;$/;"	v
mBCDMON	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDDATE, *mBCDDAY, *mBCDMON, *mBCDYEAR;$/;"	v
mBCDSEC	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDSEC, *mBCDMIN, *mBCDHOUR;$/;"	v
mBCDYEAR	kerneltimer/kt_driver.c	/^volatile unsigned long *mBCDDATE, *mBCDDAY, *mBCDMON, *mBCDYEAR;$/;"	v
mGPBCON	led/led_driver.c	/^volatile unsigned long *mGPBCON, *mGPBDAT, *mGPBUP;$/;"	v
mGPBDAT	led/led_driver.c	/^volatile unsigned long *mGPBCON, *mGPBDAT, *mGPBUP;$/;"	v
mGPBUP	led/led_driver.c	/^volatile unsigned long *mGPBCON, *mGPBDAT, *mGPBUP;$/;"	v
mRTCALM	kerneltimer/kt_driver.c	/^volatile unsigned long *mRTCCON, *mTICNT, *mRTCALM, *mALMSEC, *mALMMIN;$/;"	v
mRTCCON	kerneltimer/kt_driver.c	/^volatile unsigned long *mRTCCON, *mTICNT, *mRTCALM, *mALMSEC, *mALMMIN;$/;"	v
mTCFG0	led/led_driver.c	/^volatile unsigned long *mTCFG0, *mTCFG1, *mTCON;$/;"	v
mTCFG1	led/led_driver.c	/^volatile unsigned long *mTCFG0, *mTCFG1, *mTCON;$/;"	v
mTCMPB0	led/led_driver.c	/^volatile unsigned long *mTCNTB0, *mTCMPB0, *mTCNTO0;$/;"	v
mTCNTB0	led/led_driver.c	/^volatile unsigned long *mTCNTB0, *mTCMPB0, *mTCNTO0;$/;"	v
mTCNTO0	led/led_driver.c	/^volatile unsigned long *mTCNTB0, *mTCMPB0, *mTCNTO0;$/;"	v
mTCON	led/led_driver.c	/^volatile unsigned long *mTCFG0, *mTCFG1, *mTCON;$/;"	v
mTICNT	kerneltimer/kt_driver.c	/^volatile unsigned long *mRTCCON, *mTICNT, *mRTCALM, *mALMSEC, *mALMMIN;$/;"	v
main	adc/adc_test.c	/^int main(int argc, char * argv)$/;"	f	signature:(int argc, char * argv)
main	adc/adc_test_block.c	/^int main(int argc, char * argv)$/;"	f	signature:(int argc, char * argv)
main	key/key_test.c	/^int main()$/;"	f
main	key/key_test2.c	/^int main()$/;"	f
main	led/led_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	led/led_test_module.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	socket/socket_client.c	/^int main()$/;"	f
main	socket/socket_tcp_client.c	/^int main()$/;"	f
main	socket/socket_test.c	/^int main()$/;"	f
main	uart/uart_test.c	/^int main(void)$/;"	f	signature:(void)
mem	io/io.c	/^    unsigned char mem[GLOBALMEM_SIZE];$/;"	m	struct:globalmem_dev	file:	access:public
mycdev	adc/adc_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::cdev	file:	access:public
mycdev	adc/adc_driver_sync.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::cdev	file:	access:public
mycdev	kerneltimer/kt_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_rtc	typeref:struct:s3c2440_rtc::cdev	file:	access:public
mycdev	led/led_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_led	typeref:struct:s3c2440_led::cdev	file:	access:public
myclass	adc/adc_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::class	file:	access:public
myclass	adc/adc_driver_sync.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::class	file:	access:public
myclass	kerneltimer/kt_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_rtc	typeref:struct:s3c2440_rtc::class	file:	access:public
myclass	key/key_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_button	typeref:struct:s3c2440_button::class	file:	access:public
myclass	led/led_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_led	typeref:struct:s3c2440_led::class	file:	access:public
myqueue	adc/adc_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_adc	file:	access:public
myqueue	adc/adc_driver_sync.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_adc	file:	access:public
myqueue	kerneltimer/kt_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_rtc	file:	access:public
myqueue	led/led_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_led	file:	access:public
mysem	adc/adc_driver_sync.c	/^    struct semaphore mysem;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::semaphore	file:	access:public
name	uart/samsung.h	/^	char			*name;$/;"	m	struct:s3c24xx_uart_info	access:public
name_arr	uart/uart_test.c	/^int name_arr[] = {$/;"	v
names	adc/adc_driver.c	/^    char * names;$/;"	m	struct:adcs	file:	access:public
names	adc/adc_driver_sync.c	/^    char * names;$/;"	m	struct:adcs	file:	access:public
names	key/key_driver.c	/^    char * names[NUM_RESOURCE];$/;"	m	struct:irqs	file:	access:public
names	led/led_driver.c	/^    char * names[NUM_RESOURCE];$/;"	m	struct:leds	file:	access:public
obj-m	adc/Makefile	/^obj-m:=adc_device.o adc_driver_sync.o$/;"	m
obj-m	hello_d/Makefile	/^obj-m:=hello.o$/;"	m
obj-m	key/Makefile	/^obj-m:=key_device.o key_driver.o$/;"	m
obj-m	led/Makefile	/^obj-m:=led_device.o led_driver.o$/;"	m
obj-m	uart/Makefile	/^obj-m:=s3c2440.o$/;"	m
open_flag	led/test.c	/^static int open_flag = 0;$/;"	v	file:
open_port	uart/uart_test.c	/^int open_port(void)$/;"	f	signature:(void)
openflag	adc/adc_driver.c	/^    int openflag;   \/\/设备打开标志$/;"	m	struct:s3c2440_adc	file:	access:public
openflag	adc/adc_driver_sync.c	/^    int openflag;   \/\/设备打开标志$/;"	m	struct:s3c2440_adc	file:	access:public
openflag	kerneltimer/kt_driver.c	/^    int openflag;$/;"	m	struct:s3c2440_rtc	file:	access:public
openflag	key/key_driver.c	/^    unsigned int openflag;$/;"	m	struct:s3c2440_button	file:	access:public
openflag	led/led_driver.c	/^    int openflag;$/;"	m	struct:s3c2440_led	file:	access:public
overflag	adc/adc_driver.c	/^    int overflag;   \/\/转换完成标志$/;"	m	struct:s3c2440_adc	file:	access:public
overflag	adc/adc_driver_sync.c	/^    int overflag;   \/\/转换完成标志$/;"	m	struct:s3c2440_adc	file:	access:public
padcs	adc/adc_driver.c	/^    int padcs;$/;"	m	struct:adcs	file:	access:public
padcs	adc/adc_driver_sync.c	/^    int padcs;$/;"	m	struct:adcs	file:	access:public
pirqs	key/key_driver.c	/^    int pirqs[NUM_RESOURCE];$/;"	m	struct:irqs	file:	access:public
platform_driver_exit	adc/adc_driver.c	/^module_exit(platform_driver_exit);$/;"	v
platform_driver_exit	adc/adc_driver.c	/^static void __exit platform_driver_exit(void)$/;"	f	file:	signature:(void)
platform_driver_exit	adc/adc_driver_sync.c	/^module_exit(platform_driver_exit);$/;"	v
platform_driver_exit	adc/adc_driver_sync.c	/^static void __exit platform_driver_exit(void)$/;"	f	file:	signature:(void)
platform_driver_exit	kerneltimer/kt_driver.c	/^module_exit(platform_driver_exit);$/;"	v
platform_driver_exit	kerneltimer/kt_driver.c	/^static void __exit platform_driver_exit(void)$/;"	f	file:	signature:(void)
platform_driver_exit	key/key_driver.c	/^module_exit(platform_driver_exit);$/;"	v
platform_driver_exit	key/key_driver.c	/^static void __exit platform_driver_exit(void)$/;"	f	file:	signature:(void)
platform_driver_exit	led/led_driver.c	/^module_exit(platform_driver_exit);$/;"	v
platform_driver_exit	led/led_driver.c	/^static void __exit platform_driver_exit(void)$/;"	f	file:	signature:(void)
platform_driver_init	adc/adc_driver.c	/^module_init(platform_driver_init);$/;"	v
platform_driver_init	adc/adc_driver.c	/^static int __init platform_driver_init(void)$/;"	f	file:	signature:(void)
platform_driver_init	adc/adc_driver_sync.c	/^module_init(platform_driver_init);$/;"	v
platform_driver_init	adc/adc_driver_sync.c	/^static int __init platform_driver_init(void)$/;"	f	file:	signature:(void)
platform_driver_init	kerneltimer/kt_driver.c	/^module_init(platform_driver_init);$/;"	v
platform_driver_init	kerneltimer/kt_driver.c	/^static int __init platform_driver_init(void)$/;"	f	file:	signature:(void)
platform_driver_init	key/key_driver.c	/^module_init(platform_driver_init);$/;"	v
platform_driver_init	key/key_driver.c	/^static int __init platform_driver_init(void)$/;"	f	file:	signature:(void)
platform_driver_init	led/led_driver.c	/^module_init(platform_driver_init);$/;"	v
platform_driver_init	led/led_driver.c	/^static int __init platform_driver_init(void)$/;"	f	file:	signature:(void)
pleds	led/led_driver.c	/^    int pleds[NUM_RESOURCE];$/;"	m	struct:leds	file:	access:public
pm_level	uart/samsung.h	/^	unsigned int			pm_level;$/;"	m	struct:s3c24xx_uart_port	access:public
port	uart/samsung.h	/^	struct uart_port		port;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::uart_port	access:public
portaddr	uart/samsung.h	64;"	d
rd_regb	uart/samsung.h	66;"	d
rd_regl	uart/samsung.h	67;"	d
read_wait_queue	key/key_driver.c	/^    wait_queue_head_t read_wait_queue;$/;"	m	struct:s3c2440_button	file:	access:public
reset_port	uart/samsung.h	/^	int (*reset_port)(struct uart_port *, struct s3c2410_uartcfg *);$/;"	m	struct:s3c24xx_uart_info	access:public
rtc	kerneltimer/kt_driver.c	/^    int rtc;$/;"	m	struct:rtc	file:	access:public
rtc	kerneltimer/kt_driver.c	/^struct rtc{$/;"	s	file:
rtc	kerneltimer/kt_driver.c	/^}rtc;$/;"	v	typeref:struct:rtc
rtc::irq_name	kerneltimer/kt_driver.c	/^    char * irq_name;$/;"	m	struct:rtc	file:	access:public
rtc::rtc	kerneltimer/kt_driver.c	/^    int rtc;$/;"	m	struct:rtc	file:	access:public
rtc::rtc_irq	kerneltimer/kt_driver.c	/^    int rtc_irq;$/;"	m	struct:rtc	file:	access:public
rtc::rtc_name	kerneltimer/kt_driver.c	/^    char * rtc_name;$/;"	m	struct:rtc	file:	access:public
rtc_irq	kerneltimer/kt_driver.c	/^    int rtc_irq;$/;"	m	struct:rtc	file:	access:public
rtc_name	kerneltimer/kt_driver.c	/^    char * rtc_name;$/;"	m	struct:rtc	file:	access:public
rx_claimed	uart/samsung.h	/^	unsigned char			rx_claimed;$/;"	m	struct:s3c24xx_uart_port	access:public
rx_fifofull	uart/samsung.h	/^	unsigned long		rx_fifofull;$/;"	m	struct:s3c24xx_uart_info	access:public
rx_fifomask	uart/samsung.h	/^	unsigned long		rx_fifomask;$/;"	m	struct:s3c24xx_uart_info	access:public
rx_fifoshift	uart/samsung.h	/^	unsigned long		rx_fifoshift;$/;"	m	struct:s3c24xx_uart_info	access:public
rx_irq	uart/samsung.h	/^	unsigned int			rx_irq;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c2440_adc	adc/adc_driver.c	/^static struct s3c2440_adc s3c2440_adc;$/;"	v	typeref:struct:s3c2440_adc	file:
s3c2440_adc	adc/adc_driver.c	/^struct s3c2440_adc$/;"	s	file:
s3c2440_adc	adc/adc_driver_sync.c	/^static struct s3c2440_adc s3c2440_adc;$/;"	v	typeref:struct:s3c2440_adc	file:
s3c2440_adc	adc/adc_driver_sync.c	/^struct s3c2440_adc$/;"	s	file:
s3c2440_adc::adc_lock	adc/adc_driver_sync.c	/^    struct semaphore adc_lock; \/\/设备打开锁，用于只打开一个设备$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::semaphore	file:	access:public
s3c2440_adc::lock	adc/adc_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::lock	adc/adc_driver_sync.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::mycdev	adc/adc_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::cdev	file:	access:public
s3c2440_adc::mycdev	adc/adc_driver_sync.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::cdev	file:	access:public
s3c2440_adc::myclass	adc/adc_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::class	file:	access:public
s3c2440_adc::myclass	adc/adc_driver_sync.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::class	file:	access:public
s3c2440_adc::myqueue	adc/adc_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::myqueue	adc/adc_driver_sync.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::mysem	adc/adc_driver_sync.c	/^    struct semaphore mysem;$/;"	m	struct:s3c2440_adc	typeref:struct:s3c2440_adc::semaphore	file:	access:public
s3c2440_adc::openflag	adc/adc_driver.c	/^    int openflag;   \/\/设备打开标志$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::openflag	adc/adc_driver_sync.c	/^    int openflag;   \/\/设备打开标志$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::overflag	adc/adc_driver.c	/^    int overflag;   \/\/转换完成标志$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc::overflag	adc/adc_driver_sync.c	/^    int overflag;   \/\/转换完成标志$/;"	m	struct:s3c2440_adc	file:	access:public
s3c2440_adc_device	adc/adc_device.c	/^static struct platform_device s3c2440_adc_device = {$/;"	v	typeref:struct:platform_device	file:
s3c2440_adc_driver	adc/adc_driver.c	/^static struct platform_driver s3c2440_adc_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_adc_driver	adc/adc_driver_sync.c	/^static struct platform_driver s3c2440_adc_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_adc_init	adc/adc_device.c	/^module_init(s3c2440_adc_init);$/;"	v
s3c2440_adc_init	adc/adc_device.c	/^static int __init s3c2440_adc_init(void)$/;"	f	file:	signature:(void)
s3c2440_adc_interrupt_handler	adc/adc_driver.c	/^static irqreturn_t s3c2440_adc_interrupt_handler($/;"	f	file:	signature:( int irq, void * devid )
s3c2440_adc_interrupt_handler	adc/adc_driver_sync.c	/^static irqreturn_t s3c2440_adc_interrupt_handler($/;"	f	file:	signature:( int irq, void * devid )
s3c2440_adc_ioctl	adc/adc_driver.c	/^static long s3c2440_adc_ioctl(struct file * filp,$/;"	f	file:	signature:(struct file * filp, unsigned int cmd, unsigned long arg)
s3c2440_adc_ioctl	adc/adc_driver_sync.c	/^static long s3c2440_adc_ioctl(struct file * filp,$/;"	f	file:	signature:(struct file * filp, unsigned int cmd, unsigned long arg)
s3c2440_adc_open	adc/adc_driver.c	/^static int s3c2440_adc_open(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_adc_open	adc/adc_driver_sync.c	/^static int s3c2440_adc_open(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_adc_ops	adc/adc_driver.c	/^static struct file_operations s3c2440_adc_ops = {$/;"	v	typeref:struct:file_operations	file:
s3c2440_adc_ops	adc/adc_driver_sync.c	/^static struct file_operations s3c2440_adc_ops = {$/;"	v	typeref:struct:file_operations	file:
s3c2440_adc_poll	adc/adc_driver.c	/^static unsigned int s3c2440_adc_poll($/;"	f	file:	signature:( struct file * filp, struct poll_table_struct * wait )
s3c2440_adc_poll	adc/adc_driver_sync.c	/^static unsigned int s3c2440_adc_poll($/;"	f	file:	signature:( struct file * filp, struct poll_table_struct * wait )
s3c2440_adc_probe	adc/adc_driver.c	/^static int s3c2440_adc_probe(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_adc_probe	adc/adc_driver_sync.c	/^static int s3c2440_adc_probe(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_adc_read	adc/adc_driver.c	/^static ssize_t s3c2440_adc_read($/;"	f	file:	signature:( struct file * filp, char * buffer, size_t count, loff_t *pos)
s3c2440_adc_read	adc/adc_driver_sync.c	/^static ssize_t s3c2440_adc_read($/;"	f	file:	signature:( struct file * filp, char * buffer, size_t count, loff_t *pos)
s3c2440_adc_release	adc/adc_device.c	/^static int s3c2440_adc_release(struct device * dev)$/;"	f	file:	signature:(struct device * dev)
s3c2440_adc_release	adc/adc_driver.c	/^static int s3c2440_adc_release(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_adc_release	adc/adc_driver_sync.c	/^static int s3c2440_adc_release(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_adc_remove	adc/adc_driver.c	/^static int s3c2440_adc_remove(struct platform_device * pdev)$/;"	f	file:	signature:(struct platform_device * pdev)
s3c2440_adc_remove	adc/adc_driver_sync.c	/^static int s3c2440_adc_remove(struct platform_device * pdev)$/;"	f	file:	signature:(struct platform_device * pdev)
s3c2440_adc_resource	adc/adc_device.c	/^static struct resource s3c2440_adc_resource[] = {$/;"	v	typeref:struct:resource	file:
s3c2440_button	key/key_driver.c	/^static struct s3c2440_button s3c2440_button;$/;"	v	typeref:struct:s3c2440_button	file:
s3c2440_button	key/key_driver.c	/^struct s3c2440_button{$/;"	s	file:
s3c2440_button::bepressed	key/key_driver.c	/^    int bepressed;$/;"	m	struct:s3c2440_button	file:	access:public
s3c2440_button::cdev	key/key_driver.c	/^    struct cdev * cdev;$/;"	m	struct:s3c2440_button	typeref:struct:s3c2440_button::cdev	file:	access:public
s3c2440_button::key_values	key/key_driver.c	/^    int key_values;$/;"	m	struct:s3c2440_button	file:	access:public
s3c2440_button::lock	key/key_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_button	file:	access:public
s3c2440_button::myclass	key/key_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_button	typeref:struct:s3c2440_button::class	file:	access:public
s3c2440_button::openflag	key/key_driver.c	/^    unsigned int openflag;$/;"	m	struct:s3c2440_button	file:	access:public
s3c2440_button::read_wait_queue	key/key_driver.c	/^    wait_queue_head_t read_wait_queue;$/;"	m	struct:s3c2440_button	file:	access:public
s3c2440_button_close	key/key_driver.c	/^static int s3c2440_button_close(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_button_driver	key/key_driver.c	/^static const struct platform_driver s3c2440_button_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_button_exit	key/key_device.c	/^module_exit(s3c2440_button_exit);$/;"	v
s3c2440_button_exit	key/key_device.c	/^static void __exit s3c2440_button_exit(void)$/;"	f	file:	signature:(void)
s3c2440_button_init	key/key_device.c	/^module_init(s3c2440_button_init);$/;"	v
s3c2440_button_init	key/key_device.c	/^static int __init s3c2440_button_init(void)$/;"	f	file:	signature:(void)
s3c2440_button_interrupt_handler	key/key_driver.c	/^static irqreturn_t s3c2440_button_interrupt_handler($/;"	f	file:	signature:( int irq, void * dev_id )
s3c2440_button_open	key/key_driver.c	/^static int s3c2440_button_open(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_button_poll	key/key_driver.c	/^static unsigned int s3c2440_button_poll($/;"	f	file:	signature:( struct file * filp, struct poll_table_struct * wait )
s3c2440_button_probe	key/key_driver.c	/^static int s3c2440_button_probe(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_button_read	key/key_driver.c	/^static unsigned long s3c2440_button_read($/;"	f	file:	signature:( struct file * filp, char __user * buff, size_t count, loff_t offp )
s3c2440_button_release	key/key_device.c	/^static int s3c2440_button_release(void)$/;"	f	file:	signature:(void)
s3c2440_button_remove	key/key_driver.c	/^static int s3c2440_button_remove(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_fops	key/key_driver.c	/^static const struct file_operations s3c2440_fops = {$/;"	v	typeref:struct:file_operations	file:
s3c2440_gpio_resource	led/led_device.c	/^static struct resource s3c2440_gpio_resource[] = {$/;"	v	typeref:struct:resource	file:
s3c2440_led	led/led_driver.c	/^static struct s3c2440_led s3c2440_led;$/;"	v	typeref:struct:s3c2440_led	file:
s3c2440_led	led/led_driver.c	/^struct s3c2440_led$/;"	s	file:
s3c2440_led::interrupt_flag	led/led_driver.c	/^    int interrupt_flag;$/;"	m	struct:s3c2440_led	file:	access:public
s3c2440_led::lock	led/led_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_led	file:	access:public
s3c2440_led::mycdev	led/led_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_led	typeref:struct:s3c2440_led::cdev	file:	access:public
s3c2440_led::myclass	led/led_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_led	typeref:struct:s3c2440_led::class	file:	access:public
s3c2440_led::myqueue	led/led_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_led	file:	access:public
s3c2440_led::openflag	led/led_driver.c	/^    int openflag;$/;"	m	struct:s3c2440_led	file:	access:public
s3c2440_led::timer_openflag	led/led_driver.c	/^    int timer_openflag;$/;"	m	struct:s3c2440_led	file:	access:public
s3c2440_led_device	led/led_device.c	/^static struct platform_device s3c2440_led_device = {$/;"	v	typeref:struct:platform_device	file:
s3c2440_led_driver	led/led_driver.c	/^static struct platform_driver s3c2440_led_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_led_exit	adc/adc_device.c	/^module_exit(s3c2440_led_exit);$/;"	v
s3c2440_led_exit	adc/adc_device.c	/^static void __exit s3c2440_led_exit(void)$/;"	f	file:	signature:(void)
s3c2440_led_exit	led/led_device.c	/^module_exit(s3c2440_led_exit);$/;"	v
s3c2440_led_exit	led/led_device.c	/^static void __exit s3c2440_led_exit(void)$/;"	f	file:	signature:(void)
s3c2440_led_freq	led/led_driver.c	/^static void s3c2440_led_freq(struct s3c2440_led * dev, unsigned long arg)$/;"	f	file:	signature:(struct s3c2440_led * dev, unsigned long arg)
s3c2440_led_init	led/led_device.c	/^module_init(s3c2440_led_init);$/;"	v
s3c2440_led_init	led/led_device.c	/^static int __init s3c2440_led_init(void)$/;"	f	file:	signature:(void)
s3c2440_led_ioctl	led/led_driver.c	/^static long s3c2440_led_ioctl(struct file * filp, unsigned int cmd,$/;"	f	file:	signature:(struct file * filp, unsigned int cmd, unsigned long arg)
s3c2440_led_open	led/led_driver.c	/^static int s3c2440_led_open(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_led_ops	led/led_driver.c	/^static struct file_operations s3c2440_led_ops = {$/;"	v	typeref:struct:file_operations	file:
s3c2440_led_probe	led/led_driver.c	/^static int s3c2440_led_probe(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_led_read	led/led_driver.c	/^static ssize_t s3c2440_led_read($/;"	f	file:	signature:( struct file * filp, char * buffer, size_t count, loff_t *pos )
s3c2440_led_release	led/led_device.c	/^static int s3c2440_led_release(struct device * dev)$/;"	f	file:	signature:(struct device * dev)
s3c2440_led_release	led/led_driver.c	/^static int s3c2440_led_release(struct inode * inode, struct file * filp)$/;"	f	file:	signature:(struct inode * inode, struct file * filp)
s3c2440_led_remove	led/led_driver.c	/^static int s3c2440_led_remove(struct platform_device * pdev)$/;"	f	file:	signature:(struct platform_device * pdev)
s3c2440_rtc	kerneltimer/kt_driver.c	/^static struct s3c2440_rtc s3c2440_rtc;$/;"	v	typeref:struct:s3c2440_rtc	file:
s3c2440_rtc	kerneltimer/kt_driver.c	/^struct s3c2440_rtc{$/;"	s	file:
s3c2440_rtc::lock	kerneltimer/kt_driver.c	/^    spinlock_t lock;$/;"	m	struct:s3c2440_rtc	file:	access:public
s3c2440_rtc::mycdev	kerneltimer/kt_driver.c	/^    struct cdev * mycdev;$/;"	m	struct:s3c2440_rtc	typeref:struct:s3c2440_rtc::cdev	file:	access:public
s3c2440_rtc::myclass	kerneltimer/kt_driver.c	/^    struct class * myclass;$/;"	m	struct:s3c2440_rtc	typeref:struct:s3c2440_rtc::class	file:	access:public
s3c2440_rtc::myqueue	kerneltimer/kt_driver.c	/^    wait_queue_head_t myqueue;$/;"	m	struct:s3c2440_rtc	file:	access:public
s3c2440_rtc::openflag	kerneltimer/kt_driver.c	/^    int openflag;$/;"	m	struct:s3c2440_rtc	file:	access:public
s3c2440_rtc::timeflag	kerneltimer/kt_driver.c	/^    int timeflag;$/;"	m	struct:s3c2440_rtc	file:	access:public
s3c2440_rtc_device	kerneltimer/kt_device.c	/^static struct platform_device s3c2440_rtc_device ={$/;"	v	typeref:struct:platform_device	file:
s3c2440_rtc_driver	kerneltimer/kt_driver.c	/^static struct platform_driver s3c2440_rtc_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_rtc_exit	kerneltimer/kt_device.c	/^module_exit(s3c2440_rtc_exit);$/;"	v
s3c2440_rtc_exit	kerneltimer/kt_device.c	/^static void __exit s3c2440_rtc_exit(void)$/;"	f	file:	signature:(void)
s3c2440_rtc_init	kerneltimer/kt_device.c	/^module_init(s3c2440_rtc_init);$/;"	v
s3c2440_rtc_init	kerneltimer/kt_device.c	/^static int __init s3c2440_rtc_init(void)$/;"	f	file:	signature:(void)
s3c2440_rtc_interrupt_handler	kerneltimer/kt_driver.c	/^static irqturn_t s3c2440_rtc_interrupt_handler($/;"	f	file:	signature:( int irq, void * devid )
s3c2440_rtc_open	kerneltimer/kt_driver.c	/^static int s3c2440_rtc_open($/;"	f	file:	signature:( struct inode * inode, struct file * filp )
s3c2440_rtc_ops	kerneltimer/kt_driver.c	/^static struct file_operations s3c2440_rtc_ops = {$/;"	v	typeref:struct:file_operations	file:
s3c2440_rtc_poll	kerneltimer/kt_driver.c	/^static unsigned int s3c2440_rtc_poll($/;"	f	file:	signature:( struct file * filp, struct poll_table_struct * wait )
s3c2440_rtc_probe	kerneltimer/kt_driver.c	/^static int s3c2440_rtc_probe(struct platform_device * dev)$/;"	f	file:	signature:(struct platform_device * dev)
s3c2440_rtc_read	kerneltimer/kt_driver.c	/^static ssize_t s3c2440_rtc_read($/;"	f	file:	signature:( struct file * filp, char __user * buffer, size_t count, loff_t *pos )
s3c2440_rtc_release	kerneltimer/kt_device.c	/^static int s3c2440_rtc_release(struct devicee *dev)$/;"	f	file:	signature:(struct devicee *dev)
s3c2440_rtc_release	kerneltimer/kt_driver.c	/^static int s3c2440_rtc_release($/;"	f	file:	signature:( struct inode * inode, struct file * filp )
s3c2440_rtc_remove	kerneltimer/kt_driver.c	/^static int s3c2440_rtc_remove(struct platform_device * pdev)$/;"	f	file:	signature:(struct platform_device * pdev)
s3c2440_rtc_resource	kerneltimer/kt_device.c	/^static struct resource s3c2440_rtc_resource[] = {$/;"	v	typeref:struct:resource	file:
s3c2440_rtc_write	kerneltimer/kt_driver.c	/^static ssize_t s3c2440_rtc_write($/;"	f	file:	signature:( struct file * filp, const char __user * buffer, size_t count, loff_t *pos )
s3c2440_serial_driver	uart/s3c2440.c	/^static struct platform_driver s3c2440_serial_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_serial_exit	uart/s3c2440.c	/^module_exit(s3c2440_serial_exit);$/;"	v
s3c2440_serial_exit	uart/s3c2440.c	/^static void __exit s3c2440_serial_exit(void)$/;"	f	file:	signature:(void)
s3c2440_serial_getsource	uart/s3c2440.c	/^static int s3c2440_serial_getsource(struct uart_port *port,$/;"	f	file:	signature:(struct uart_port *port, struct s3c24xx_uart_clksrc *clk)
s3c2440_serial_init	uart/s3c2440.c	/^module_init(s3c2440_serial_init);$/;"	v
s3c2440_serial_init	uart/s3c2440.c	/^static int __init s3c2440_serial_init(void)$/;"	f	file:	signature:(void)
s3c2440_serial_probe	uart/s3c2440.c	/^static int s3c2440_serial_probe(struct platform_device *dev)$/;"	f	file:	signature:(struct platform_device *dev)
s3c2440_serial_resetport	uart/s3c2440.c	/^static int s3c2440_serial_resetport(struct uart_port *port,$/;"	f	file:	signature:(struct uart_port *port, struct s3c2410_uartcfg *cfg)
s3c2440_serial_setsource	uart/s3c2440.c	/^static int s3c2440_serial_setsource(struct uart_port *port,$/;"	f	file:	signature:(struct uart_port *port, struct s3c24xx_uart_clksrc *clk)
s3c2440_timer_handler	led/led_driver.c	/^static irqreturn_t s3c2440_timer_handler($/;"	f	file:	signature:( int irq, void * devid )
s3c2440_uart_inf	uart/s3c2440.c	/^static struct s3c24xx_uart_info s3c2440_uart_inf = {$/;"	v	typeref:struct:s3c24xx_uart_info	file:
s3c24xx_console_init	uart/samsung.h	85;"	d
s3c24xx_console_init	uart/samsung.h	94;"	d
s3c24xx_dev_to_cfg	uart/samsung.h	60;"	d
s3c24xx_dev_to_port	uart/samsung.h	59;"	d
s3c24xx_uart_info	uart/samsung.h	/^struct s3c24xx_uart_info {$/;"	s
s3c24xx_uart_info::fifosize	uart/samsung.h	/^	unsigned int		fifosize;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::get_clksrc	uart/samsung.h	/^	int (*get_clksrc)(struct uart_port *, struct s3c24xx_uart_clksrc *clk);$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::has_divslot	uart/samsung.h	/^	unsigned int		has_divslot:1;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::name	uart/samsung.h	/^	char			*name;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::reset_port	uart/samsung.h	/^	int (*reset_port)(struct uart_port *, struct s3c2410_uartcfg *);$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::rx_fifofull	uart/samsung.h	/^	unsigned long		rx_fifofull;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::rx_fifomask	uart/samsung.h	/^	unsigned long		rx_fifomask;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::rx_fifoshift	uart/samsung.h	/^	unsigned long		rx_fifoshift;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::set_clksrc	uart/samsung.h	/^	int (*set_clksrc)(struct uart_port *, struct s3c24xx_uart_clksrc *clk);$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::tx_fifofull	uart/samsung.h	/^	unsigned long		tx_fifofull;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::tx_fifomask	uart/samsung.h	/^	unsigned long		tx_fifomask;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::tx_fifoshift	uart/samsung.h	/^	unsigned long		tx_fifoshift;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_info::type	uart/samsung.h	/^	unsigned int		type;$/;"	m	struct:s3c24xx_uart_info	access:public
s3c24xx_uart_port	uart/samsung.h	/^struct s3c24xx_uart_port {$/;"	s
s3c24xx_uart_port::baudclk	uart/samsung.h	/^	struct clk			*baudclk;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::clk	access:public
s3c24xx_uart_port::baudclk_rate	uart/samsung.h	/^	unsigned long			baudclk_rate;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c24xx_uart_port::clk	uart/samsung.h	/^	struct clk			*clk;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::clk	access:public
s3c24xx_uart_port::clksrc	uart/samsung.h	/^	struct s3c24xx_uart_clksrc	*clksrc;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::s3c24xx_uart_clksrc	access:public
s3c24xx_uart_port::freq_transition	uart/samsung.h	/^	struct notifier_block		freq_transition;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::notifier_block	access:public
s3c24xx_uart_port::info	uart/samsung.h	/^	struct s3c24xx_uart_info	*info;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::s3c24xx_uart_info	access:public
s3c24xx_uart_port::pm_level	uart/samsung.h	/^	unsigned int			pm_level;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c24xx_uart_port::port	uart/samsung.h	/^	struct uart_port		port;$/;"	m	struct:s3c24xx_uart_port	typeref:struct:s3c24xx_uart_port::uart_port	access:public
s3c24xx_uart_port::rx_claimed	uart/samsung.h	/^	unsigned char			rx_claimed;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c24xx_uart_port::rx_irq	uart/samsung.h	/^	unsigned int			rx_irq;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c24xx_uart_port::tx_claimed	uart/samsung.h	/^	unsigned char			tx_claimed;$/;"	m	struct:s3c24xx_uart_port	access:public
s3c24xx_uart_port::tx_irq	uart/samsung.h	/^	unsigned int			tx_irq;$/;"	m	struct:s3c24xx_uart_port	access:public
set_clksrc	uart/samsung.h	/^	int (*set_clksrc)(struct uart_port *, struct s3c24xx_uart_clksrc *clk);$/;"	m	struct:s3c24xx_uart_info	access:public
size	adc/adc_driver.c	/^    int size;$/;"	m	struct:adcs	file:	access:public
size	adc/adc_driver_sync.c	/^    int size;$/;"	m	struct:adcs	file:	access:public
speed_arr	uart/uart_test.c	/^int speed_arr[] = {$/;"	v
time_virt	led/led_driver.c	/^volatile unsigned long time_virt;$/;"	v
timeflag	kerneltimer/kt_driver.c	/^    int timeflag;$/;"	m	struct:s3c2440_rtc	file:	access:public
timer	led/led_driver.c	/^    int timer;$/;"	m	struct:leds	file:	access:public
timer_name	led/led_driver.c	/^    char * timer_name;$/;"	m	struct:leds	file:	access:public
timer_openflag	led/led_driver.c	/^    int timer_openflag;$/;"	m	struct:s3c2440_led	file:	access:public
tx_claimed	uart/samsung.h	/^	unsigned char			tx_claimed;$/;"	m	struct:s3c24xx_uart_port	access:public
tx_fifofull	uart/samsung.h	/^	unsigned long		tx_fifofull;$/;"	m	struct:s3c24xx_uart_info	access:public
tx_fifomask	uart/samsung.h	/^	unsigned long		tx_fifomask;$/;"	m	struct:s3c24xx_uart_info	access:public
tx_fifoshift	uart/samsung.h	/^	unsigned long		tx_fifoshift;$/;"	m	struct:s3c24xx_uart_info	access:public
tx_irq	uart/samsung.h	/^	unsigned int			tx_irq;$/;"	m	struct:s3c24xx_uart_port	access:public
type	uart/samsung.h	/^	unsigned int		type;$/;"	m	struct:s3c24xx_uart_info	access:public
virt	adc/adc_driver.c	/^volatile unsigned long virt;$/;"	v
virt	adc/adc_driver_sync.c	/^volatile unsigned long virt;$/;"	v
virt	kerneltimer/kt_driver.c	/^volatile unsigned long virt;$/;"	v
virt	led/led_driver.c	/^volatile unsigned long virt;$/;"	v
wr_regb	uart/samsung.h	69;"	d
wr_regl	uart/samsung.h	70;"	d
